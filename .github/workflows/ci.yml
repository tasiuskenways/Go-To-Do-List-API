name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: todolist
  REDIS_PORT: 6379
  APP_PORT: 3000
  APP_ENV: test

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.55.2
        args: --timeout 5m --config .golangci.yml

  test:
    name: Test
    needs: lint
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true

    - name: Set up environment
      run: |
        echo "DB_HOST=localhost" >> $GITHUB_ENV
        echo "DB_PORT=5432" >> $GITHUB_ENV
        echo "DB_USER=${{ env.POSTGRES_USER }}" >> $GITHUB_ENV
        echo "DB_PASSWORD=${{ env.POSTGRES_PASSWORD }}" >> $GITHUB_ENV
        echo "DB_NAME=${{ env.POSTGRES_DB }}" >> $GITHUB_ENV
        echo "REDIS_ADDR=localhost:${{ env.REDIS_PORT }}" >> $GITHUB_ENV
        echo "APP_ENV=${{ env.APP_ENV }}" >> $GITHUB_ENV
        echo "JWT_SECRET=test-secret" >> $GITHUB_ENV

    - name: Build
      run: go build -v ./...

    - name: Run tests
      run: |
        # Add your test command here when ready
        echo "Skipping tests for now"

  build-docker:
    name: Build Docker Image
    needs: test
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/todolist:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/todolist:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
